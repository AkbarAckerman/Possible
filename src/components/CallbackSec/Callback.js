import React, { useState } from 'react';
import axios from 'axios';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import './Callback.css';

const Callback = () => {
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [businessName, setBusinessName] = useState('');

  const handleNameChange = (e) => {
    const value = e.target.value;
    const filteredValue = value.replace(/[0-9]/g, ''); // Remove numbers
    setName(filteredValue);
  };

  const handlePhoneChange = (e) => {
    const value = e.target.value;
    const filteredValue = value.replace(/[^0-9+() -]/g, ''); // Allow only numbers and certain symbols
    setPhone(filteredValue);
  };

  const handleSubmit = async (event) => {
    event.preventDefault();

    if (!name || !phone || !businessName) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
      return;
    }

    const token = '6375765924:AAGPwqUQEzQo2XKOHG1c56Ixv2m2rH97j6o';
    const chatId = '-4020548368';

    try {
      await axios.post(`https://api.telegram.org/bot${token}/sendMessage`, {
        chat_id: chatId,
        text: `–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—åüë§:\n–ò–º—è –∏ –§–∞–º–∏–ª–∏—è: ${name}\n–¢–∏–ø –£—Å–ª—É–≥–∏üè†: ${businessName}\n–¢–µ–ª–µ—Ñ–æ–Ωüìû: ${phone}`,
      });

      toast.success('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.', {
        position: "top-right",
        autoClose: 3000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "colored",
      });

      setName('');
      setPhone('');
      setBusinessName('');

    } catch (error) {
      console.error('Error sending message:', error);
    }
  };

  return (
    <div className='Callback' id='Callback'>
      <div className="callback_container">
        <div className='callback_main_text'>–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</div>
        <div className='callback_sub_text'>–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</div>
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name">–ò–º—è</label>
            <input
              type="text"
              id="name"
              value={name}
              onChange={handleNameChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="businessName">–£—Å–ª—É–≥–∞</label>
            <input
              type="text"
              id="businessName"
              value={businessName}
              onChange={(e) => setBusinessName(e.target.value)}
              placeholder="–¢–∏–ø –£—Å–ª—É–≥–∏"
              required
            />
          </div>
          <div className="form-group">
            <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
            <input
              type="tel"
              id="phone"
              value={phone}
              onChange={handlePhoneChange}
              placeholder="+998 () ----"
              required
            />
          </div>
          <div className='callback-btn-container'>
          <button type="submit" className="callback_btn">
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
          </div>
        </form>
      </div>
      <ToastContainer />
    </div>
  );
};

export default Callback;